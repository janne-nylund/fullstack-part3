{"version":3,"sources":["services/persons.js","components/PhonebookForm.js","components/Person.js","components/Persons.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","status","PhonebookForm","props","onSubmit","addPerson","className","value","newName","onChange","handleNameChange","newNumber","handleNumberChange","type","Person","person","name","number","Persons","personsToShow","removePerson","map","key","onClick","remove","target","Notification","message","cssSelector","App","useState","persons","setPersons","setNewName","setNewNumber","setPersonsToShow","filterValue","setFilterValue","successMessage","setSuccessMessage","errorMessage","setErrorMessage","useEffect","personService","initialPersons","event","searchString","filter","toLowerCase","includes","preventDefault","personObject","some","personExists","find","window","alert","personToUpdate","confirm","returnedPerson","updatedNumber","setTimeout","catch","error","undefined","p","concat","personToRemove","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1d525f2a.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst remove = id => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => response.status)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update, remove }","import React from 'react'\n\nconst PhonebookForm = (props) => {\n    return(\n      <form onSubmit={props.addPerson}>\n          <div className=\"textInputs\">\n            Name:\n            <input\n            value={props.newName} \n            onChange={props.handleNameChange}\n            />\n          </div>\n          <div className=\"textInputs\">\n            Number:\n            <input \n            value={props.newNumber} \n            onChange={props.handleNumberChange}\n            />\n          </div>\n          <div>\n            <button type=\"submit\" className=\"addButton\">add</button>\n          </div>\n        </form>\n    )\n  }\n\nexport default PhonebookForm","import React from 'react'\n\nconst Person = ({ person }) => {\n  return (\n    < >{person.name} {person.number}</ >\n  )\n}\n\nexport default Person","import React from 'react'\nimport Person from './Person'\n\nconst Persons = ({personsToShow, removePerson} ) => {\n    return (\n      <div>{personsToShow.map((person) =>\n        <div key={person.id}>  \n        <p><Person person={person} />\n          <button \n            value={person.id} \n            onClick={remove => removePerson(remove.target.value)}\n          >\n            Delete\n          </button>\n        </p>\n        </div>\n    )}\n    </div>\n    )\n}\n\nexport default Persons\n","import React from 'react'\n\nconst Notification = ({ message, cssSelector}) => {\n    if (message === null) {\n      return null\n    }\n  \n    return (\n      <div className={cssSelector}>\n        {message}\n      </div>\n    )\n  }\n\n  export default Notification","import React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\nimport PhonebookForm from './components/PhonebookForm'\nimport Persons from './components/Persons'\nimport Notification from './components/Notification'\n\nconst App = (props) => {\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ personsToShow, setPersonsToShow ] = useState([])\n  const [ filterValue, setFilterValue] = useState('')\n  const [ successMessage, setSuccessMessage] = useState(null)\n  const [ errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    personService\n    .getAll()\n    .then(initialPersons => {\n      setPersons(initialPersons)\n      setPersonsToShow(initialPersons)\n  })\n  }, [])\n\n  const addPerson = (event) => {\n    event.preventDefault()\n\n    const personObject = {\n      name: newName,\n      number: newNumber,\n    }\n \n    // array.some -> if atleast one of the elements match\n    if (persons.some(person => person.name.toLowerCase() === newName.toLowerCase() && newNumber === \"\")) {\n      const personExists = persons.find(person => person.name.toLowerCase() === newName.toLowerCase())\n      window.alert(`Please give a number for ${personExists.name}.`);\n    } \n    else if (persons.some(person => person.name.toLowerCase() === newName.toLowerCase() && person.number !== newNumber)) {\n      const personToUpdate = persons.find(person => person.name.toLowerCase() === newName.toLowerCase())\n      if (window.confirm(`${personToUpdate.name} is already added to the phonebook, replace the old number with a new one?`)){\n        personService\n      .update(personToUpdate.id, personObject)\n      .then(returnedPerson => {\n        const updatedNumber = persons.map(person => person.id !== personToUpdate.id ? person : returnedPerson)\n        setPersons(updatedNumber)\n        setPersonsToShow(updatedNumber)\n        setNewName('')\n        setNewNumber('')\n        setFilterValue('')\n        setSuccessMessage(`${newName}'s number was updated`)\n          setTimeout(() => {\n            setSuccessMessage(null)\n          }, 2500)\n      })\n\n      .catch(error => {\n        if (error.response.data.error === undefined) {\n          setErrorMessage(`${personToUpdate.name} was already removed from server`)\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 3500)\n          setPersons(persons.filter(p => p.id !== personToUpdate.id))\n          setPersonsToShow(persons.filter(p => p.id !== personToUpdate.id))       \n        } else {\n          setErrorMessage(`${error.response.data.error}`)\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 3500)\n        }\n        \n      })\n      }\n    }\n    else if (persons.some(person => person.name.toLowerCase() === newName.toLowerCase() && person.number === newNumber)) {\n      const personExists = persons.find(person => person.name.toLowerCase() === newName.toLowerCase())\n      window.alert(`${personExists.name} already exists in the phonebook`);\n    }    \n    else {\n      personService\n        .create(personObject)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          setPersonsToShow(persons.concat(returnedPerson))\n          setNewName('')\n          setNewNumber('')\n          setFilterValue('')\n          setSuccessMessage(`${newName} was added to the phonebook`)\n          setTimeout(() => {\n            setSuccessMessage(null)\n          }, 2500)\n        })\n        .catch(error => {\n          setErrorMessage(`${error.response.data.error}`)\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 3500)\n        })\n    }\n  }\n  \n  const removePerson = (id) => {\n    const personToRemove = persons.find(person => person.id === id)\n    if (window.confirm(`Delete ${personToRemove.name}?`)){   \n      personService\n      .remove(id)\n      .then(response => {\n      setFilterValue('')\n      setPersons(persons.filter(p => p.id !== id))\n      setPersonsToShow(persons.filter(p => p.id !== id))\n      setSuccessMessage(`${personToRemove.name} was deleted, status: ${response}`)\n          setTimeout(() => {\n            setSuccessMessage(null)\n          }, 2500)\n    })\n    .catch(error => {\n      setErrorMessage(\n        `${personToRemove.name} was already removed from server, status: ${error.response.status}`\n      )\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 2500)\n      setPersons(persons.filter(p => p.id !== personToRemove.id))\n      setPersonsToShow(persons.filter(p => p.id !== personToRemove.id))\n    })\n   } \n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFindChange = (event) => {\n    const searchString = event.target.value\n    setFilterValue(searchString)\n    setPersonsToShow(persons.filter(person => person.name.toLowerCase().includes(searchString.toLowerCase())))\n  }\n  \n\n  return (\n    <div className=\"wrapper\">\n      <h1>Phonebook</h1>\n      <Notification message={successMessage} cssSelector = 'notification' />\n      <Notification message={errorMessage} cssSelector = 'error' />\n      <div>Filter persons\n        <input\n          value={filterValue} \n          onChange={handleFindChange}\n        />\n      </div>\n      <h2>Add a new person</h2>\n      <PhonebookForm \n        addPerson={addPerson} \n        newName={newName} \n        newNumber={newNumber} \n        handleNameChange={handleNameChange} \n        handleNumberChange={handleNumberChange}\n      />\n      <h2>Numbers</h2>\n      <Persons removePerson={removePerson} personsToShow={personsToShow} />\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}